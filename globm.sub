#!/bin/sh 

# Launch this script with 
# batch manager is easy => esubmit
#   amd all commands starting with "sp*"
# esubmit -n <number node> -t <time limit (minutes)> -J <name of exp> test_multi_node.sub ">>out_test.out 2>>out_test.out"
#
# kill job:
# sprelease <ID>
#
# see queue:
# spq -w -u ${USER}
#
#
#

npx=22
npy=11
NP=`expr ${npx} \* ${npy}` ; # number of nodes...                                                                                                                                                                                            
ncp=12

NN=`expr ${NP} / ${ncp}`
NN=`expr \( ${NP} / ${ncp} \)`

if [ `expr ${NP} % ${ncp}` -ne 0 ]; then NN=`expr ${NN} + 1`;fi

#NN=`expr \( ${NP} / 1 \)`

echo ${NN}

TIME_LIM=`expr 72 \* 60` ; # minutes...                                                                                                                                                                                                      

il=1
iu=${npx}
jl=1
ju=${npy}



cat > m2new2.tmp <<EOF
#!/bin/sh 
#SBATCH -N ${NN}                                                                                                            
#SBATCH -A snic002-12-16 
#SBATCH -J GEBCO                                                                                                     
#SBATCH -t 120:00:00                                                                                                    
#SBATCH --exclusive                                                                                                      
#SBATCH -o energy.out                                                                                                   
#SBATCH -e energy.err                                                                                                   
#######                                                                                                                 
#               

. /etc/cmod/sh.init


ulimit -s unlimited 


module add openmpi/1.6.2-build1

echo ; echo "OpenMPI: \`which mpirun\`"; echo
#                                                                                                                                                                                                                                            
echo ; env | grep SLURM ; echo

#                                                                                                                                                           

N0=\${SLURM_NODELIST}; echo; echo "Requested nodes are:"




s1=\`echo \${N0} | cut -f1 -d']'\`

echo

echo \${s2}


s2=\`echo \${s1} | cut -f2 -d'['\`

echo

echo \${s2}


nf=\`echo \${s2} | awk -F',' '{ print NF }'\`








jd=0

for nn in \`seq \${nf}\`;do

    fl=\`echo \${s2} | cut -d',' -f\${nn}\`

    if [ -n \${fl} ]; then

        echo \${fl}
        
        echo

        sf=\`echo \${fl} | grep -o '-'\`
        
        echo \${sf}

        if [ "\${sf}" == "-" ]; then

            echo "hyphen field " \${fl}


            n1=\`echo \${fl} | cut -d'-' -f1\`
            
            n2=\`echo \${fl} | cut -d'-' -f2\`

            echo "n1-n2"  "\${n1}-\${n2}"

            if [ \`expr \${n2} - \${n1}\` -eq 1 ];then

                no1=\${n1}
                 node[\${jd}]=n\${n1}
                 jd=\`expr \${jd} + 1\`
                 no2=\${n2}
                node[\${jd}]=n\${n2}
                 jd=\`expr \${jd} + 1\`
                 
            else

                n2n1=\`expr \${n2} - \${n1} + 1\`

                for jn in \`seq \${n2n1}\`;do
                     
                    node[\${jd}]=n\`expr \${n1} + \${jn} - 1\`
                    jd=\`expr \${jd} + 1\`

                done
                echo 'node[*]' \${node[*]}
            fi

           else 

             node[\${jd}]=n\${fl}
             jd=\`expr \${jd} + 1\`
             

        fi

        echo


    fi

done

echo 'node[*]' \${node[*]}

echo 'node[*]' \${!node[*]}


jj=0                                                                                          
                                                               
while [ \${jj} -lt 70  ];do
                                                                                                                                  
jobp[\${jj}]=" "
                                                                                                                                             
job[\${jj}]=" " 
                                                                                                                                             
jj=\`expr \${jj} + 1\`
                                                                                                                                       
done
                                                                                                                                                         
iindex=\`seq ${il} ${iu}\`
                                                                                                                                   
jindex=\`seq ${jl} ${ju}\`
                                                                                                                                   
HERE=\`pwd\`
                                                                                                                                                 

for jj in \${jindex};do 
                                                                                                                                     
    for ii in \${iindex};do
                                                                                                                                  
        c1=\`printf "%02d" \${ii}\`
                                                                                                                          
        c2=\`printf "%02d" \${jj}\`
                                                                                                                          
        job[\${ii}\${jj}]=""./tmx" "\${c1}" "\${c2}""
                                                                                                        
    done
                                                                                                                                                     
done       



cd \${HERE}/

echo \${job[*]}
                                                                                                                                              

#N0=\${SLURM_NODELIST}; echo; echo "Requested nodes are:"

mpirun\\
EOF


iindex=`seq ${il} ${iu}`
jindex=`seq ${jl} ${ju}`
end=":\\"


jmp=0
jn=0

jarea=0



for jj in ${jindex};do
    for ii in ${iindex};do
        if [  ${jj} -eq ${ju} -a  ${ii} -eq ${iu} ]; then

            end=" "
        fi
          
        jmp=`expr ${jmp} + 1`
	if [ ${jmp} -eq 1 ];then
 	    cat > rest<<EOF
 -n 1 -hosts \${node[${jn}]} \${job[${ii}${jj}]} ${end}
EOF
        else
            cat > rest <<EOF
 -n 1 -hosts \${node[${jn}]} \${job[${ii}${jj}]} ${end}
EOF
	fi

        cat rest >>m2new2.tmp
        jarea=`expr ${jarea} + 1`
        if [ `expr ${jarea} % ${ncp}` -eq 0 ];then
        jn=`expr ${jn} + 1`
        fi
    
done
done

\rm -f rest

cat > rest<<EOF 
#
#
EOF
#                                                                                                                                                           

cat rest>>m2new2.tmp

\rm -f test

chmod +x ./m2new2.tmp

echo 

sbatch ./m2new2.tmp


